trigger:
  branches:
    include:
      - main
      - master

pr:
  branches:
    include:
      - main

variables:
  # Only define static/computed values here.
  # Secrets (AZURE_SP_PASSWORD, AZURE_STATIC_WEBAPP_API_TOKEN) must be set in Azure DevOps Variable Group / Pipeline UI.
  AZURE_RESOURCE_GROUP: "Rental-Management"
  AZURE_STATIC_WEBAPP_NAME: "rental-management-frontend"
  AZURE_WEBAPP_NAME: "your-backend-app-name"  # Add your backend app service name here
  AZURE_SUBSCRIPTION_ID: "bf912271-f73c-4e2a-b886-17c8fcdf8894"
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18.x'
  SELF_HOSTED_POOL: 'self-hosted-pool'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: BuildBackend
        displayName: Build & Test Backend
        pool:
          name: $(SELF_HOSTED_POOL)
          demands:
            - agent.os -equals Windows_NT
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET SDK'
            inputs:
              packageType: 'sdk'
              version: $(DOTNET_VERSION)

          - task: DotNetCoreCLI@2
            displayName: 'dotnet restore'
            inputs:
              command: 'restore'
              projects: 'backend/**/*.csproj'

          - task: DotNetCoreCLI@2
            displayName: 'dotnet build'
            inputs:
              command: 'build'
              projects: 'backend/**/*.csproj'
              arguments: '--configuration Release --no-restore'

          - task: DotNetCoreCLI@2
            displayName: 'dotnet test'
            inputs:
              command: 'test'
              projects: 'backend/**/*Tests.csproj'
              arguments: '--no-build --verbosity normal'
            continueOnError: true

          - task: DotNetCoreCLI@2
            displayName: 'dotnet publish'
            inputs:
              command: 'publish'
              publishWebProjects: false
              projects: 'backend/**/*.csproj'
              arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)/backend_publish'

          - publish: $(Build.ArtifactStagingDirectory)/backend_publish
            artifact: backend_artifact

      - job: BuildFrontend
        displayName: Build Frontend
        pool:
          name: $(SELF_HOSTED_POOL)
          demands:
            - agent.os -equals Windows_NT
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(NODE_VERSION)
            displayName: 'Use Node'

          - task: Npm@1
            displayName: 'npm install'
            inputs:
              command: 'install'
              workingDir: 'frontend'

          - task: Npm@1
            displayName: 'npm run build'
            inputs:
              command: 'custom'
              customCommand: 'run build'
              workingDir: 'frontend'

          - publish: frontend/dist
            artifact: frontend_artifact

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - deployment: DeployFrontend
        displayName: Deploy Frontend to Azure Static Web Apps
        environment: 'static-web-app'
        pool:
          name: $(SELF_HOSTED_POOL)
          demands:
            - agent.os -equals Windows_NT
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: frontend_artifact

                - task: AzureCLI@2
                  displayName: 'Deploy frontend to Azure Static Web App'
                  inputs:
                    azureSubscription: 'AzureServiceConnection-RM'  # Replace with your service connection name
                    scriptType: 'bat'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      if not exist "$(Pipeline.Workspace)\frontend_artifact" (
                        echo Frontend build output not found
                        exit /b 1
                      )
                      az staticwebapp upload --name "$(AZURE_STATIC_WEBAPP_NAME)" --resource-group "$(AZURE_RESOURCE_GROUP)" --source "$(Pipeline.Workspace)\frontend_artifact" --subscription "$(AZURE_SUBSCRIPTION_ID)"

      - deployment: DeployBackend
        displayName: Deploy Backend to Azure App Service
        environment: 'app-service'
        pool:
          name: $(SELF_HOSTED_POOL)
          demands:
            - agent.os -equals Windows_NT
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: backend_artifact

                - task: AzureCLI@2
                  displayName: 'Deploy backend via az cli (zip deploy)'
                  inputs:
                    azureSubscription: 'AzureServiceConnection-RM'  # Replace with your service connection name
                    scriptType: 'bat'
                    scriptLocation: 'inlineScript'
                    inlineScript: |
                      cd /d "$(Pipeline.Workspace)\backend_artifact"
                      set ZIP_PATH=%TEMP%\backend_publish.zip
                      if exist "%ZIP_PATH%" del /f "%ZIP_PATH%"
                      powershell -Command "Compress-Archive -Path * -DestinationPath '%ZIP_PATH%' -Force"
                      az webapp deploy --resource-group "$(AZURE_RESOURCE_GROUP)" --name "$(AZURE_WEBAPP_NAME)" --src-path "%ZIP_PATH%" --type zip